% @require: html-base
@require: mathml

module DocumentClass :> sig

  val document : (|
    title: inline-text,
  |) -> block-text -> string

  val +p : block [inline-text]

end = struct

  val concat = List.fold-left (^) ` `

  val document record inner =
    let tinfo = get-initial-text-info (command \Mathml.math) Mathml.output-scripts in
      concat [
        `<!DOCTYPE html><html><title>`,
        stringify-inline tinfo record#title,
        `</title></head><body>`,
        stringify-block tinfo inner,
        `</body></html>`,
%        `<!DOCTYPE html>`,
%        break tinfo,
%        HTMLBase.tag tinfo `html` (fun tinfo ->
%          concat [
%            HTMLBase.tag tinfo `head` (fun tinfo ->
%              HTMLBase.tag ?(bropt = false) tinfo `title` (fun tinfo ->
%                stringify-inline tinfo record#title
%              )
%            ),
%            HTMLBase.tag tinfo `body` (fun tinfo ->
%              stringify-block tinfo inner
%            )
%          ]
%        ),
      ]

  val block tinfo +p it =
    `<p>` ^ stringify-inline tinfo it ^ `</p>`
    %HTMLBase.tag tinfo `p` (fun tinfo ->
    %  stringify-inline tinfo it
    %)

end
